(defun init (choix moteur)
  (let (path)
  (if (= choix 1)
    (setq path "~/Cloud/WORK/UTC/GI01/IA01/Cactus/")
    (setq path "~/Documents/UTC/GI01/IA01/Cactus/"))
  (load (concatenate 'string path "technologies.lisp"))
  (load (concatenate 'string path "regles.lisp"))
  (load (concatenate 'string path "questions.lisp"))
  (load (concatenate 'string path "fonctionsOutilsFaits.lisp"))
  (load (concatenate 'string path "fonctionsOutilsRegles.lisp"))
  (load (concatenate 'string path "chainageAvantLarg.lisp"))
  (load (concatenate 'string path "chainageAvantProf.lisp"))
  (load (concatenate 'string path "askQuestion.lisp"))
  (load (concatenate 'string path "afficherPropositions.lisp"))
  (load (concatenate 'string path "intro.lisp"))
  (defparameter *faits* nil)
  (intro)
  (if (= moteur 1)
    (ChainageAvantLarg)
    (ChainageAvantProf))))


(setq attBR nil)
(dolist (r *regles*) (dolist (y (car (last (assoc 'propositions (conclusion r))))) (pushnew y attBR)))
(setq attBF (loop for a in *technologies* collect (car a)))

(loop for a in (set-difference attBR attBF) do (print a))
(loop for a in (set-difference attBF attBR) do (print a))
